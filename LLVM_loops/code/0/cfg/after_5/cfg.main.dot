digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x240db40 [shape=record,label="{%2:\l  %3 = icmp sgt i32 %0, 0\l  br i1 %3, label %4, label %13\l|{<s0>T|<s1>F}}"];
	Node0x240db40:s0 -> Node0x240dc70;
	Node0x240db40:s1 -> Node0x240dcc0;
	Node0x240dc70 [shape=record,label="{%4:\l\l  %5 = add i32 %0, -1\l  %xtraiter = and i32 %0, 3\l  %6 = icmp ult i32 %5, 3\l  br i1 %6, label %.loopexit.unr-lcssa, label %.new\l|{<s0>T|<s1>F}}"];
	Node0x240dc70:s0 -> Node0x240e0f0;
	Node0x240dc70:s1 -> Node0x240e1d0;
	Node0x240e1d0 [shape=record,label="{.new:                                             \l  %unroll_iter = sub i32 %0, %xtraiter\l  br label %15\l}"];
	Node0x240e1d0 -> Node0x240e390;
	Node0x240e480 [shape=record,label="{.loopexit.unr-lcssa.loopexit:                     \l  %.lcssa.ph.ph = phi i32 [ %24, %15 ]\l  %.unr.ph = phi i32 [ %25, %15 ]\l  %.unr1.ph = phi i32 [ %24, %15 ]\l  br label %.loopexit.unr-lcssa\l}"];
	Node0x240e480 -> Node0x240e0f0;
	Node0x240e0f0 [shape=record,label="{.loopexit.unr-lcssa:                              \l  %.lcssa.ph = phi i32 [ undef, %4 ], [ %.lcssa.ph.ph,\l... %.loopexit.unr-lcssa.loopexit ]\l  %.unr = phi i32 [ 0, %4 ], [ %.unr.ph, %.loopexit.unr-lcssa.loopexit ]\l  %.unr1 = phi i32 [ 0, %4 ], [ %.unr1.ph, %.loopexit.unr-lcssa.loopexit ]\l  %lcmp.mod = icmp ne i32 %xtraiter, 0\l  br i1 %lcmp.mod, label %.epil.preheader, label %.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x240e0f0:s0 -> Node0x240ef00;
	Node0x240e0f0:s1 -> Node0x240f0f0;
	Node0x240ef00 [shape=record,label="{.epil.preheader:                                  \l  br label %7\l}"];
	Node0x240ef00 -> Node0x240f210;
	Node0x240f210 [shape=record,label="{%7:\l\l  %8 = phi i32 [ %11, %7 ], [ %.unr, %.epil.preheader ]\l  %9 = phi i32 [ %10, %7 ], [ %.unr1, %.epil.preheader ]\l  %epil.iter = phi i32 [ %xtraiter, %.epil.preheader ], [ %epil.iter.sub, %7 ]\l  %10 = tail call i32 @myF(i32 %9)\l  %11 = add nuw nsw i32 %8, 1\l  %12 = icmp eq i32 %11, %0\l  %epil.iter.sub = sub i32 %epil.iter, 1\l  %epil.iter.cmp = icmp ne i32 %epil.iter.sub, 0\l  br i1 %epil.iter.cmp, label %7, label %.loopexit.epilog-lcssa, !llvm.loop !2\l|{<s0>T|<s1>F}}"];
	Node0x240f210:s0 -> Node0x240f210;
	Node0x240f210:s1 -> Node0x240f8b0;
	Node0x240f8b0 [shape=record,label="{.loopexit.epilog-lcssa:                           \l  %.lcssa.ph2 = phi i32 [ %10, %7 ]\l  br label %.loopexit\l}"];
	Node0x240f8b0 -> Node0x240f0f0;
	Node0x240f0f0 [shape=record,label="{.loopexit:                                        \l  %.lcssa = phi i32 [ %.lcssa.ph, %.loopexit.unr-lcssa ], [ %.lcssa.ph2,\l... %.loopexit.epilog-lcssa ]\l  br label %13\l}"];
	Node0x240f0f0 -> Node0x240dcc0;
	Node0x240dcc0 [shape=record,label="{%13:\l\l  %14 = phi i32 [ 0, %2 ], [ %.lcssa, %.loopexit ]\l  ret i32 %14\l}"];
	Node0x240e390 [shape=record,label="{%15:\l\l  %16 = phi i32 [ 0, %.new ], [ %25, %15 ]\l  %17 = phi i32 [ 0, %.new ], [ %24, %15 ]\l  %niter = phi i32 [ %unroll_iter, %.new ], [ %niter.nsub.3, %15 ]\l  %18 = tail call i32 @myF(i32 %17)\l  %19 = add nuw nsw i32 %16, 1\l  %niter.nsub = sub i32 %niter, 1\l  %20 = tail call i32 @myF(i32 %18)\l  %21 = add nuw nsw i32 %19, 1\l  %niter.nsub.1 = sub i32 %niter.nsub, 1\l  %22 = tail call i32 @myF(i32 %20)\l  %23 = add nuw nsw i32 %21, 1\l  %niter.nsub.2 = sub i32 %niter.nsub.1, 1\l  %24 = tail call i32 @myF(i32 %22)\l  %25 = add nuw nsw i32 %23, 1\l  %niter.nsub.3 = sub i32 %niter.nsub.2, 1\l  %niter.ncmp.3 = icmp eq i32 %niter.nsub.3, 0\l  br i1 %niter.ncmp.3, label %.loopexit.unr-lcssa.loopexit, label %15\l|{<s0>T|<s1>F}}"];
	Node0x240e390:s0 -> Node0x240e480;
	Node0x240e390:s1 -> Node0x240e390;
}
